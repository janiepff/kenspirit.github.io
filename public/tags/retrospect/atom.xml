<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Retrospect | Thinking in Crowd / 鹄思乱想]]></title>
  <link href="http://www.thinkingincrowd.me/tags/retrospect/atom.xml" rel="self"/>
  <link href="http://www.thinkingincrowd.me/"/>
  <updated>2013-03-11T05:42:02+08:00</updated>
  <id>http://www.thinkingincrowd.me/</id>
  <author>
    <name><![CDATA[鹄思乱想]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2013 Retrospect and Goal Setting]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2013/02/05/2013-retrospect-and-goal-setting/"/>
    <updated>2013-02-05T22:37:00+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2013/02/05/2013-retrospect-and-goal-setting</id>
    <content type="html"><![CDATA[<p>现在写年终总结和新年展望似乎有点晚。其实我是习惯按农历年附近划分的，呵呵。开玩笑，因为前段时间忙前面两篇Blog，并且去年比较大的转折事件也算是农历年后开始，那就歪打正着吧。</p>

<h2>翻墙</h2>

<p>比较大的事件就是这个。难的换工作后有机会肉体翻墙，去拜访了万恶的资本主义老大 - 美国，还真见识了一把。蔚蓝的天空，PM2.5超低的空气，见人即停的车，真让人羡慕嫉妒恨，更加强了我内心深处的出国欲望。可惜家庭的顾虑和牵挂已经无法轻易撇去，只能留它作为追寻的梦想，不断激励自身奋斗，以应付未来这个诡异的国度的各种变化。</p>

<h2>工作</h2>

<p>本来换工作主要目的就是转攻前端，可是计划赶不上变化，翻墙的代价就是去熟悉后台相应开发技术。所以，过去一年，在部门里还主要是负责 JAVA 开发。编码和设计功底变化不大，只是要适应新框架和在框架的限制内做最有效的挣扎。本是小角色一名，只需专心写代码。后来人士变动，变成 Sub-group lead，发现开会时间暴增，写代码时间变少，碎片化。无效率的开会真是万恶之源。</p>

<p>去年技术方面成长速度并不太理想。要熟悉新框架，新业务，新团队，和新项目起步各种混乱，还有各种会议，让我各方面耗费不少时间。思考和学习如何敏捷，如何不断寻找可改进领域，有效推进事情而尽可能少侵犯既有利益团体可以说是对技术成长缓慢的补偿。要在大公司里推进一些事情，真是比小团队难多了。只能从自身，从小，从内部做起。</p>

<p>明年听说有点变动。老板理想很美好，关键看流程和各部门如何相应变革协调，而这正是当前主要问题所在。碰到转变的契机可不容易，无论是好是坏，都可学习到东西。我就拭目以待，并尽全力推进，看事态如何发展再说吧。</p>

<p>个人方面，明年希望做事可以更有效率，看能否借助自己正在做的 Pet Project 来帮助管理和理清自己的时间花在什么地方和更好的榨取之。在技术和团队上，已经基本和 Team Lead 沟通过，未来可能主要负责注重项目整体技术和设计，希望推动引入防打扰时间，Code Review，CI 持续集成等。</p>

<h2>看书，学习</h2>

<p>一直以来，都尽量找时间用 Kindle 看书。只是突然从看盗版PDF，变成乐意去购买原版。虽然花了我不少银子，可是心里舒坦。也觉得作为知识工作者，应该尊重其他人的劳动成果。回头如果未来自己有什么产出，同样希望得到回报。去年一下买了不少书，主要因为之前两三年从老婆怀孕到照顾儿子期间，学习少了，积累不少书债。加之不少好书涌出和推荐，一下忍不了手。下面是主要书单：</p>

<p><strong>技术类</strong></p>

<ul>
<li>Functional Programming for the Object-Oriented Programmer by Brian Marick</li>
<li>NOSQL Distilled by Pramod J. Sadalage, Martin Fowler</li>
<li>Patterns of Enterprise Application Development by Martin Fowler</li>
<li>Domain-Driven Design by Eric Evans</li>
<li>The Art of UNIX Programming by Eric S. Raymond</li>
<li><em>Async JavaScript by Trevor Burnham</em></li>
<li><em>JavaScript: The Good Parts by Douglas Crockford</em></li>
<li><em>Stylin' with CSS by Charles Wyke-Smith</em></li>
</ul>


<p><strong>非技术类</strong></p>

<ul>
<li>The Lean Startup by Eric Ries</li>
<li>The Pragmatic Programmer by Andrew Hunt, David Thomas</li>
<li>Mythical Man-Month by Frederick P. Brooks</li>
<li><em>Kanban by David J. Anderson</em></li>
<li><em>More Joel on Software by Joel Spolsky</em></li>
<li><em>Getting Real by Jason Fried</em></li>
<li><em>Rework by Jason Fried</em></li>
<li><em>Driving Technical Change by Terrence Ryan</em></li>
<li><em>Hackers and Painters by Paul Graham</em></li>
</ul>


<p><em>注：斜体的已经看了</em></p>

<p>个人感觉书看的有点快，多少有点囫囵吞枣的感觉。可能是书债太多，怕看少了跟不上时代了，呵呵。其实还有一部分想法是，首先初读，让大脑先接触多领域的思想和知识，然后再精读，反复读，并且在实践中结合，才能吸收和强化理解。无论是技术类或非技术类的方法论书籍，不尝试去自己写代码，不实践方法，是无法体会的。第一遍，要大概了解里面主要讲到什么点和最感触的是什么，以便日常工作学习实践。然后再精读来慢慢巩固吸收。好书，读三遍也不为过。</p>

<p>之前看的是非技术类书多点，因为利用零散的时间来看书的话，看技术类的，不容易入脑。这个月再争取看完 The Lean Startup 和 Mythical Man-Month，然后集中精力看剩下的技术类书。日后为了巩固知识和真正理解，看完一本书必须写写心得和书评。</p>

<p>技术方面的学习，只要还是集中在前端，Javascript 和 Functional Programming 方面。目前主要是利用 Pet Project 来摆弄一下 AngularJS，MongoDB 和 NodeJS。</p>

<h2>时间安排</h2>

<p>学习时间：<br/>
零散时间基本就只有平时上下班车里的30分钟，还有其它一切可能的坐车时间。这些时间都是用来看书，写 Blog，或者看看 Google Reader，微博。连续的时间最多只在早上。由于家人比较早睡觉，大概9:30-10:00就休息了，所以我也只能早睡早起以避免打扰。早上4:30-5:00期间起床，洗漱15分钟，到6:45分基本有1.5小时，周末的话，家人比较晚起，可以有2小时。这段时间主要先用30分钟左右看看微博，或者书。再写写代码。最后还有周末午休时间，大概3小时，也主要用来写代码或者Blog。</p>

<p>家庭时间：<br/>
其实就是在我工作和学习之外的几乎所有时间支出了。或者应该说是在工作和家庭时间之外的所有时间，我再榨取出我的学习时间。优先级来说，还是以家庭优先。这里主要用在陪伴儿子上面。每晚陪他玩一玩，下下棋，周末出去逛逛，接触一下户外，基本就这样过了。还没什么特定模式和游戏来开发他的智力潜能什么的。这个老爸还是有点懒，明年看看有什么可以改进的。为人父母真的不容易，压力山大啊。</p>

<p>锻炼时间：<br/>
每天早上固定15分钟左右，跳绳，哑铃，俯卧撑，仰卧起坐等。不过最近运动减少，因为前段时间儿子生病没有上幼儿园，老妈腰也不舒服，所以要帮忙做饭买菜什么的，再加上有时自己在学习时又放不下手，就忽略了点。明年还是得加强一下，学习也不差那15分钟了。</p>

<h2>善事</h2>

<p>公益组织方面，现在是月捐150元给世界儿童组织，因为好像已经没有什么公益组织可以信得过了。壹基金之前也通过招行信用卡月捐了一年。后来因为卡太多而取消了，明年看要不要其它途径重启一下。个人方面，之前看到一个江门的人，老婆有血液病，艰难的生了个健康的小孩出来。但是他老婆的病还没钱做手术，拖延着治疗着。详情可以看<a href="http://t.cn/zjBs02D">江门日报</a>和她老婆的<a href="http://weibo.com/u/2785731123">微博</a>。 连续几个月捐了些吧，只是一个人也撑不了太长时间，就也帮她在微博宣传一下。谁有心的，也可以帮助一下。</p>

<p>我的帮助原则是，个人优于组织。已经在微博上被很多大人物推广出来的，我就不捐了，因为他们已经得到很多关注。困难的是一些没有办法得到别人更多关注的普通人，特别是没什么文化的。我关注的对象主要是一些父母或者小朋友。毕竟为人父亲，懂得家庭责任和有困难的痛处。</p>

<p>其实实际意义上来说，我做的也并不算什么善事。可能还只是伪善，出了点钱，安慰一下自己。本来也想像 Ailsa 她们那样去探访一些需要帮助的人，只是还是私心重些，希望陪家人多点。像她那样初为人母，还这样不遗余力，才是真善。我那个相形见绌。等儿子在老家放假时再参于一下吧。其实我本来是有计划想等儿子长大点，找个家附近或者珠海的需要帮助的人，除了捐钱外，还可以时不时带儿子去探望一下，也可以教育他，让他懂得怜爱和帮助别人。明年再看看这想法能不能实施。</p>

<h2>总结</h2>

<p>工作还凑合，总体得到肯定。有些想法，因为有家在身，顾虑太多，已经不容易实施。我是一个顾家的人，那些舍家人而出去闯的事，不是不想，只是做不出来。不过，也不甘虚度日子，不断努力学习技术是王道，也为日后万一所需。为实践10000小时原则，还需要下不少功夫。看书还需要继续，但是要更专注和深入理解别人的思想以融为已用。在做的 Pet Project 5月前要做出来。当然还是要继续写 Blog 来做分享和总结。总体来说，没什么大成就。对自己而言，也算是已经尽最大努力平衡家庭，工作和学习。</p>

<p>最后祝支持我的家人和朋友们新年如意，身体健康。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为什么开始写技术博客, 并且还是用英语?]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2013/01/01/why-i-start-blogging-and-in-english/"/>
    <updated>2013-01-01T22:00:00+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2013/01/01/why-i-start-blogging-and-in-english</id>
    <content type="html"><![CDATA[<p>一些朋友发现我最近在写一些博客，而且还多数是英语的，都在好奇我在搞什么。那我就写一篇博客来解释一下吧。</p>

<p>写技术博客好处很多，很多牛人也提到过, 这是我出来刚工作时的一位同事的<a href="http://www.iamhukai.com/">博客</a>, 现在他在Thoughworks, 里面有好几篇文章说到为什么要写和怎么写。</p>

<h2>写技术博客的原因</h2>

<ul>
<li><p><strong>写博客可以积累总结自己的一些想法，见证技术学习过程和成长的经历</strong>。所以，我博客里的内容，一般应该会是技术类文章多一点，当然也会有一些开发过程和管理的想法及吐槽。写博客就是一种总结的手段，对自己知识的回顾和梳理。</p></li>
<li><p><strong>博客是一种对外沟通交友，甚至是宣扬思想和文化的平台，说点实际的还可以为自己打广告</strong>。人生在世，总希望找到些志同道合的朋友。这些朋友有生活上的，情感上的，也有事业上的。博客也可以说是为我寻找事业上的朋友的地方之一。</p></li>
<li><p><strong>为后来人积累一些财富，帮助他人解决一些问题</strong>。我已经习惯在Google和别人的博客上索取了那么长时间了，是时候贡献自己的力量的时候了。把自己遇到的一些问题，最终的解决方案，想法分享出来，应该可以帮助一些后来人。也许有人觉得自己遇到的困难和解决方法太微不足道了，说出来让人笑话。其实不然，每个人都有成长过程，像我们也要去获取别人的智慧一样，我们要帮助的就是那些还没有起来的人。而且，也别太小看自己了。</p></li>
</ul>


<h2>用英语的原因</h2>

<p>也许有不少人觉得我在装13，卖弄自己的英语水平。而且我觉得, 用英语写博客, 可能会使得博客流量不高, 正如我那位旧同事所说。那么，我为什么还这么做呢？</p>

<ul>
<li><p>我确实英语水平比中文好，我也喜欢英语多过中文。很多人看到这可能会说我卖国贼，呵呵。其实为什么呢？我从小语文水平都不高，60到70分左右吧，作文也差。对以前的语文课，我完全感受不到语言的美丽。各种什么作者观点分析，文言文等，搞得我对语文很反感，遇到的语文老师，又没几个好的，反正学习语文对我来说充满了挫折感。</p>

<p>  我是在六年级就开始学英语，但那时是用中文来模拟发音和死记的。我记得刚上初中的时候，第一次测验才40多分的。但后来水平一直都不算差，我也不知道为什么。不过使我喜欢上英语的，是因为在大学梦想出国留学，疯狂学英语，考TOEFL和GRE，才喜欢上了，也使得自己水平比附近的人要高。学英语对我来说，充满了成功和优越感。所以，培养成功的感觉，可能真的很重要。为什么同样是语言，学英语我会比学语文好？可能TOEFL和GRE考试都强调的是事实和逻辑推理，不像语文那些什么观点分析那么狗屁吧。</p>

<p>  至于现在，我还那么喜欢英语，我想是延续之前的情结，以及从事IT的缘故吧。所有先进的技术，一开始都从国外发源起来，不懂英语，怎么行呢？</p></li>
<li><p>我现在主要的工作，还是编程。编程用什么语言？废话，当然是英语。大家看过<a href="http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882">Clean Code</a>这本书吗？ 什么叫做<em>Self-Documentary</em>的代码？ 不知道的，看书去。为了能写出清晰，优雅，具有自我说明能力的代码，命名一个变量，一个方法，都是有讲究的，如果一段代码，读起来像读文章一样，那就成功了一大半了。</p>

<p>  而且，在<a href="http://www.amazon.com/More-Joel-Software-Occasionally-Developers/dp/B002KE5SLU/ref=sr_1_1?ie=UTF8&amp;qid=1357050792&amp;sr=8-1&amp;keywords=More+Joel+on+Software">More Joel on Software</a>, 也就是<a href="http://book.douban.com/subject/4163938/">软件随想录</a> 这本书里面，在<em>Learn how to write before graduating</em>这一节里面说到：</p></li>
</ul>


<blockquote><p>the programmers with the most power and influence are the ones who can write and speaks in English clearly, convincingly, and comfortably,</p>

<p>...</p>

<p>The difference between a tolerable programmer and a great programmer is not how many languages they know, and it's not whether they prefer Python or Java.  It's whether they can communicate their ideas.</p></blockquote>

<p>所以，锻炼用英语来写博客，主要是提高自己的代码编写能力和成为一名好的程序员。</p>

<p>好了, 我已经起航了, 你们是否也考虑考虑写写博客?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[待在优秀的地方，还是把所在的地方改变的优秀]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2012/07/15/stay-in-good-or-change-to-be-good/"/>
    <updated>2012-07-15T17:31:25+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2012/07/15/stay-in-good-or-change-to-be-good</id>
    <content type="html"><![CDATA[<p>已经换了工作差不多一年，期间还有幸被派去美国学习所做的系统后台开发，趁着本博客重新启航，是时候回顾一下了。</p>

<p><strong>小公司 vs 大公司</strong></p>

<p>在小公司那么多年来，给我最大的感受就是灵活性强，行动敏捷。再加上本人后来能担当上Team Lead角色，所以，有什么好的想法，自然容易尝试和贯彻。但是公司的敏捷，一但被利用成不断高强度赶项目而忽视了人员培养，代码和框架的改进，团队和系统的问题便不断浮现。这也成为我离开的原因之一。不过，对怎么样推动改变上，我并没有做的很好。在能自己拍板范围外的事，虽然有提意见，但是推动不够，主要都在等领导的改变和决策，主动性还不够强。</p>

<p>来了大公司差不多一年了，最大的感受和没有来之前想象到的差不多，就是沟通成本非常高，行动迟缓。再加上职位上我只是小兵一名，有好的想法，也没法通过“强硬”的手段，推广出去。在哪里体现出迟缓的问题呢？</p>

<ol>
<li><p>问题达成结论难。邮件多，开会部门多，人员杂，是大公司的通病。这其实还不是主要问题。问题是一开始讨论邮件或者开会的人员，在等级或者部门上来讲，大家都是平级的。通常情况是老大级别一般先没有参于，即使有，也是各方的老大，也都在，结果还是打平。在谈一个问题的时候，除非大家对一个问题共识较多，或者各方影响不大，方案比较容易通过。但是如果主要涉及一方要其它各方做更大改变，就不容易出结论了。因为大家平级，不好说一方强行推行。那么最终可能要拉锯一段时间，最后再把老老大拉出来，才能拍板。</p></li>
<li><p>推行改变很难。改变，本来就是很难的事情。想一想睡惯懒觉的你突然要自己每天早起30分钟，跑5圈，你做的到吗？更何况如果是要改变别人，那更难了。再想象在大公司，你要改变的是多少个别人。举个例子，从10月份进公司我问为什么不用Maven，有人答我，可能今年5月，到几个星期前我再抱怨，再有人说8月。现在就放话在这，等等看什么时候实施得了。另一个原因同开会难有定调一样，涉及到影响流程，或某些人员的工作比较大的时候，就一定要有一位拍板的人物了。</p></li>
</ol>


<p>其实无论是软件还是非软件公司，大了，自然不好管了。Yahoo不是也被批官僚气氛严重，甚至连Google也不例外。Agile的提出，其中一个焦点也致于减少沟通环节。我们也引入了Agile，但是，感觉形式多于内容，反而更乱。</p>

<p><strong>如何改变，如何敏捷</strong></p>

<p>个人认为，要做到Agile，很重要的一个思想就是行动迅速，不断反省，找出不完善的地方，加以改正。这里面，非常需要的一个手段，就是试错。但是很多大公司，很难实现Agile的原因，一个原因是人多难协调，行动缓慢，另一个原因就是不敢试错。一般来说，大公司除了客观原因由于子系统杂，多，乱外，更是因为人员求稳，怕担责的思想，不敢随意做改变。怕错了，出问题，承担后果。</p>

<p>之前看了一本David J. Anderson写的关于<a href="http://www.amazon.com/Kanban-Successful-Evolutionary-Technology-Business/dp/0984521402/ref=sr_1_1?ie=UTF8&amp;qid=1342343902&amp;sr=8-1&amp;keywords=Kanban+David+J">Kanban</a>的书，个人感觉是非常适合大公司引用来进行流程，甚至是文化的改进的，甚至比Agile更有效。其中一个重要的原因是Agile的推行，一般意味着对现有流程的一次大的变革。如果人员思想跟不上，或者没有抓住重点，流于形式的话，问题更多。反而，Kanban强调的是在现有流程上的不断发现各个部位的瓶颈，不断进行细微改善和调整。里面推崇的Kaizen文化，更是精华：“任何人对流程改进的尝试，即使失败，或者出问题，都不会被追究。” 要做到这点，虽然需要有良好的衡量机制，更重要的是一种开放和允许尝试的文化。当每个人都不必惧怕所谓的承担责任时，甚至鼓励自发的对流程进行改善的时候，力量可是不容小看的。</p>

<p>具体操作上来说，要推行改变，首先要对你提出的东西，有深刻的理解，它的优缺点都要清楚，必须强调改变带来的好处是远大于它的缺点的。因为抵制的人，总会拿它的缺点说事。而且，你也必须要有坚实的论证，才能说服同事，甚至是你的老板。之前看了一本书《<a href="http://www.amazon.com/Driving-Technical-Change-Terrence-Ryan/dp/1934356603/ref=sr_1_1?ie=UTF8&amp;qid=1342343784&amp;sr=8-1&amp;keywords=Driving+Technical+Change">Driving Technical Change</a>》by Terrence Ryan，主要正是教人如何推行改变。最后，当然得期望你上面的领导是英明的，你就事半功倍了。</p>

<p><strong>改变才是永恒</strong></p>

<p>其实，没有哪里可以永恒保持优秀，重要的是如何不断的改变，来追寻优秀。小公司可以变得臃肿，大公司也可以敏捷。重要的是，首先自己要有一颗秉持Kaizen的心，和同一班同样追寻改变和优秀的人合作。</p>

<p>所以，今年我的目标就是"Push for Change; Act as Model” - “推行改变，以身作则”。其实这作为每一年的目标都是正确的，但是，对于现在的我来说，是迫切的。这正是针对自己之前的不足，也是针对目前的环境。问题多的地方，机会才多。这么一段时间以来，我感觉也确实推动了一些东西，无论直接还是间接，甚至方法上可能并不正确，或者为自己留下后患，我都无所畏惧，将继续前进。</p>

<p>可喜的是，新任的Team Lead，对问题上和我有比较一致的看法，也很积极推动团队的前进，感觉非常高兴。同时，可以在他身上，学习如何在大公司内推动改变，确实难得。前景暂时还是光明的，只需要继续努力。</p>

<p>接下来，具体的想改变的事项，我希望能在目前项目的前端开发引入Unit Test，以验证自己对前端开发和测试的想法，以及作为发展自己前端开发能力的一项手段。敬请期待。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[曾经，最后]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2012/02/15/ever-never/"/>
    <updated>2012-02-15T02:42:33+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2012/02/15/ever-never</id>
    <content type="html"><![CDATA[<p>曾经真心相待，换来质疑无奈。只能痛心离去，送上最后祝福。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个石头值多少钱]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2011/07/20/valueofstone/"/>
    <updated>2011-07-20T17:49:13+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2011/07/20/valueofstone</id>
    <content type="html"><![CDATA[<p>公司的前General Manager Tim Shee给我看了如下一篇文章：</p>

<p>小和尚的大石頭值多少錢？</p>

<p>大都市城外山上有一座峰巒環抱，翠竹蔥蔥，松柏鬱鬱的古剎，有一天，一個小和尚跑過來向老和尚請教：「師父，我人生最大的價值是什麼呢？」</p>

<p>老和尚說：「你到後花園搬一塊大石頭，拿到山下菜市場上去賣，假如有人問你什麼價錢，
你不要講話，只伸出一個指頭；假如他跟你還價，你不要賣，然後馬上抱回來，師父就告訴你，你人生最大的價值是什麼。」</p>

<p>第一天一大早，小和尚抱了一塊大石頭，興致勃勃地跑到山下菜市場上去賣。菜市場上人來人往，熙熙攘攘，人們很好奇，誰會買一塊石頭呢？結果沒一會兒，一個家庭主婦走了過來，問小和尚：「這石頭多少錢賣呀？」</p>

<p>小和尚伸出了一個指頭，那個家庭主婦說：「10塊錢？」
小和尚搖搖頭，家庭主婦說：「那麼是100塊錢？好吧，好吧！我剛好拿回去壓酸菜。」
小和尚聽到：「我的媽呀，一文不值的石頭居然有人出100元錢來買！我們山上有的是呢！」</p>

<p>於是，小和尚遵照師父的囑託沒有賣，樂不可支地抱回山上，去見師父：「師父，
今天有一個家庭主婦願意出100元，買我的石頭。師父，您現在可以告訴我，我人生最大的價值是什麼了嗎？」</p>

<p>老和尚說：「嗯！不急，你明天一早，再把這塊石頭拿到博物館 門口去，假如有人問價，
你依然伸出一個指頭；如果他還價，你不要賣，再抱回來，我們再談。」
第二天早上，小和尚又興高采烈地抱著這塊大石頭，來到了博物館。</p>

<p>在博物館外，一群好奇的人圍觀，竊竊私語：「一塊普通的石頭，到底有什麼價值，
難不成是什麼稀奇呢？只是我們還不知道而已。」
這時，有一個人從人群中竄出來，對小和尚大聲說：</p>

<p>「小和尚，你這塊石頭要賣多少錢啊？」小和尚沒出聲，伸出一個指頭，那個人說：
「1000元？1000元就1000元吧，剛好我要用它雕刻一尊神像。」
小和尚聽到這裡，倒退了一步，嚇得說不出話！但小和尚依然遵照師父的囑託沒有賣，
趕緊抱回山上，去見師父，見到師父說：「師父，今天有人要出1000元買我這塊石頭，
這回您總要告訴我，我人生最大的價值是什麼了吧？」</p>

<p>老和尚哈哈大笑說：「你明天再把這塊石頭拿到古董店門口去賣，照例有人還價，
但仍然不要賣掉它。你就把它抱回來。這一次，師傅一定告訴你，你人生最大的價值是什麼。」</p>

<p>小和尚聽後徹夜難眠，只恨天亮的太慢，好不容易到了天亮，他急忙捧著石頭跑到古董店門口，突然出現一名的拍賣師告訴他這是千年不遇的寶石，問他要賣多少錢，小和尚沒出聲，
伸出一個指頭，拍賣師說：「10000元？」小和尚搖了搖頭，拍賣師出價說：
「100000元就100000元吧，我要好好珍藏它！」小和尚聽了幾乎當場暈倒，趕緊抱回山上，去見師父，見到師父說：「師父，今天有人要出100000元買我這塊石頭，這回你總要告訴我，我人生最大的價值是什麼了吧？」</p>

<p>老和尚指著石頭打斷他說：「其實，我們並不打算賣它，不過現在你應該明白，
為什麼石頭的形狀和外表都沒有變，而你的想法和做法卻再三變化呢，我之所以讓你這樣做，主要是想培養和鍛煉你充分認識自我價值的能力，和對事物的理解能力。如果你是生活在菜市場，那麼你只有那個市場的理解力，你就永遠不會認識更高的價值。</p>

<p>不管你在什麼地方，同樣的你，有人將你抬得很高，有人把你貶得很低，有價值的東西，
只有在懂價值的人面前，才有價值。不要管別人怎麼看，關鍵是自己怎麼看自己。總而言之，你可以掌握自己的命運，決定自己的價值！」</p>

<p>※【激勵一點通】※</p>

<p>也許你就一個普通的石頭，只要你認為自己是一塊寶石，別人也可能把你當寶石來看，
也許你就是一個寶石，可是你卻認為自己是一塊普通的石頭，也許只配給人做成墊腳石來看待。</p>

<p>你看了这篇文章怎么想？
我的看法是：
1. 首先，最重要的是要清楚自己的一块什么石头，有什么料。 不然，如果确实只是烂石头，放到博物馆内也让人踢出来。
2. 知道自己的价值后，尽量往需要你这样的价值的人去靠近，不然，宝石也变压咸菜的而已。好马也要遇到伯乐才行。
3. 当然也如本文说的，不要妄自菲薄，要坚持，努力挖掘自己的优点和价值。
多到处走走，看看，了解哪可以用得上自己。</p>
]]></content>
  </entry>
  
</feed>
